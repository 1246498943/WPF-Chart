<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HeBianGu.General.WpfChart</name>
    </assembly>
    <members>
        <member name="T:HeBianGu.WPF.EChart.Legend">
            <summary>
            Legend.xaml 的交互逻辑
            </summary>
            <summary>
            Legend
            </summary>
        </member>
        <member name="M:HeBianGu.WPF.EChart.Legend.AddLegendItem(HeBianGu.WPF.EChart.LegendItem)">
            <summary>
            Adds new legend item.
            </summary>
            <param name="legendItem">The legend item.</param>
        </member>
        <member name="M:HeBianGu.WPF.EChart.Legend.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:HeBianGu.WPF.EChart.LegendItem">
            <summary>
            <see cref="T:HeBianGu.WPF.EChart.LegendItem"/> is a base class for item in legend, that represents some chart. 
            </summary>
        </member>
        <member name="M:HeBianGu.WPF.EChart.LegendItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HeBianGu.WPF.EChart.LegendItem"/> class.
            </summary>
        </member>
        <member name="M:HeBianGu.WPF.EChart.LegendItem.#ctor(HeBianGu.WPF.EChart.Description)">
            <summary>
            Initializes a new instance of the <see cref="T:HeBianGu.WPF.EChart.LegendItem"/> class.
            </summary>
            <param name="description">The description.</param>
        </member>
        <member name="P:HeBianGu.WPF.EChart.LegendItem.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="M:HeBianGu.WPF.EChart.PenDescription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HeBianGu.WPF.EChart.PenDescription"/> class.
            </summary>
        </member>
        <member name="M:HeBianGu.WPF.EChart.PenDescription.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:HeBianGu.WPF.EChart.PenDescription"/> class.
            </summary>
            <param name="description">Custom description.</param>
        </member>
        <member name="T:HeBianGu.WPF.EChart.LineLegendDetail">
            <summary> 直线图例 </summary>
        </member>
        <member name="T:HeBianGu.WPF.EChart.LineLegendItem">
            <summary> 直线图例 </summary>
        </member>
        <member name="T:HeBianGu.WPF.EChart.CardiogramCurveChartPlotter">
            <summary> 心电图图表 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.CardiogramCurveChartPlotter.GridLineColor">
            <summary> 网格线颜色 </summary>
        </member>
        <member name="M:HeBianGu.WPF.EChart.CardiogramCurveChartPlotter.RunDemo">
            <summary> 此方法的说明 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.CardiogramCurveChartPlotter.IsShowX">
            <summary> 说明 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.CardiogramCurveChartPlotter.IsShowY">
            <summary> 说明 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.CardiogramCurveChartPlotter.IsShowBaseLine">
            <summary> 说明 </summary>
        </member>
        <member name="M:HeBianGu.WPF.EChart.CardiogramCurveChartPlotter.InitData">
            <summary> 初始化心电图表 </summary>
        </member>
        <member name="T:HeBianGu.WPF.EChart.StaticCurveChartPlotter">
            <summary> 静态曲线视图 </summary>
        </member>
        <member name="T:HeBianGu.WPF.EChart.ChartPlotter">
            <summary> 图表基类 </summary>
        </member>
        <member name="M:HeBianGu.WPF.EChart.ChartPlotter.GetY(System.Double)">
            <summary> 获取值对应Canvas的位置 </summary>
        </member>
        <member name="M:HeBianGu.WPF.EChart.ChartPlotter.GetX(System.Double)">
            <summary> 获取值对应Canvas的位置 </summary>
        </member>
        <member name="M:HeBianGu.WPF.EChart.ChartPlotter.GetYValue(System.Double)">
            <summary> 获取值对应Canvas的位置应有的 Y 值 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.ChartPlotter.MaxValueY">
            <summary> 要显示的最大值 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.ChartPlotter.MinValueY">
            <summary> 要显示的最小值 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.ChartPlotter.SplitItemYs">
            <summary> Y范围分割线 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.ChartPlotter.SlpitItemXs">
            <summary> 说明 </summary>
        </member>
        <member name="T:HeBianGu.WPF.EChart.PointC">
            <summary> 数据源点 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.PointC.X">
            <summary> 说明 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.PointC.Y">
            <summary> 说明 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.PointC.Text">
            <summary> 说明 </summary>
        </member>
        <member name="T:HeBianGu.WPF.EChart.SplitItem">
            <summary> 网格分割线 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.SplitItem.Value">
            <summary> 值 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.SplitItem.Color">
            <summary> 颜色 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.SplitItem.Text">
            <summary> 文本 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.SplitItem.SpliteType">
            <summary> 说明 </summary>
        </member>
        <member name="T:HeBianGu.WPF.EChart.SplitItemType">
            <summary> 线坐标类型 </summary>
        </member>
        <member name="F:HeBianGu.WPF.EChart.SplitItemType.Normal">
            <summary> 正常线 </summary>
        </member>
        <member name="F:HeBianGu.WPF.EChart.SplitItemType.HeighLight">
            <summary> 特殊线 </summary>
        </member>
        <member name="F:HeBianGu.WPF.EChart.SplitItemType.InnerOnly">
            <summary> 只显示内部网格线 </summary>
        </member>
        <member name="T:HeBianGu.WPF.EChart.CurveChartPlotter">
            <summary> 曲线图图表 </summary>
        </member>
        <member name="M:HeBianGu.WPF.EChart.CurveChartPlotter.RefreshCurve">
            <summary> 刷新数据 </summary>
        </member>
        <member name="M:HeBianGu.WPF.EChart.CurveChartPlotter.RefreshSplitItemY">
            <summary> 刷新标尺线 </summary>
        </member>
        <member name="M:HeBianGu.WPF.EChart.CurveChartPlotter.RefreshSplitItemX">
            <summary> 刷新标尺线 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.CurveChartPlotter.MaxMinRectVisible">
            <summary> 说明 </summary>
        </member>
        <member name="M:HeBianGu.WPF.EChart.CurveChartPlotter.RefreshXYZoom">
            <summary> 刷新坐标轴 </summary>
        </member>
        <member name="M:HeBianGu.WPF.EChart.CurveChartPlotter.BindLegend(HeBianGu.WPF.EChart.ICurveEntitySource)">
            <summary> 绘制图例 </summary>
        </member>
        <member name="M:HeBianGu.WPF.EChart.CurveChartPlotter.RefreshDataSource">
            <summary> 刷新数据源 </summary>
        </member>
        <member name="M:HeBianGu.WPF.EChart.CurveChartPlotter.RefreshLegend">
            <summary> 刷新图例 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.CurveChartPlotter.GraphLine">
            <summary> 说明 </summary>
        </member>
        <member name="M:HeBianGu.WPF.EChart.CurveChartPlotter.RefreshCursorGraph">
            <summary> 绘制浮动标尺线 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.CurveChartPlotter.IsLegendVisible">
            <summary> 是否启用图例 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.CurveChartPlotter.IsAsixBoth">
            <summary> 是否显示上下左右坐标线 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.CurveChartPlotter.IsShowTrangle">
            <summary> 是否显示范围值箭头 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.CurveChartPlotter.IsAutoXAxis">
            <summary> X坐标自动排列 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.CurveChartPlotter.AutoXAxisCount">
            <summary> 自动排列数量 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.CurveChartPlotter.InnerVerticalLineStyle">
            <summary> 内部竖直网线样式 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.CurveChartPlotter.InnerHorizontalLineStyle">
            <summary> 内部水平网线样式 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.CurveChartPlotter.IsShowCursorLine">
            <summary> 是否显示浮动光标 </summary>
        </member>
        <member name="T:HeBianGu.WPF.EChart.CardiogramCurveEntitySource">
            <summary> 心电曲线图数据源 </summary>
        </member>
        <member name="T:HeBianGu.WPF.EChart.CurveEntitySource">
            <summary>  普通曲线数据实体 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.CurveEntitySource.MarkTextVisbleLeight">
            <summary> 设置要显示Mark文本的距离 防止过密显示 </summary>
        </member>
        <member name="T:HeBianGu.WPF.EChart.ICurveEntitySource">
            <summary> 曲线数据源接口 </summary>
        </member>
        <member name="M:HeBianGu.WPF.EChart.ICurveEntitySource.Draw(HeBianGu.WPF.EChart.CurveChartPlotter)">
            <summary> 绘制方法 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.ICurveEntitySource.Source">
            <summary> 数据集合 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.ICurveEntitySource.Color">
            <summary> 曲线颜色 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.ICurveEntitySource.Marker">
            <summary> 标记 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.ICurveEntitySource.Text">
            <summary> 名称 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.ICurveEntitySource.Visibility">
            <summary> 是否可见 </summary>
        </member>
        <member name="T:HeBianGu.WPF.EChart.BaseEntitySource">
            <summary> 抽象基类 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.BaseEntitySource.Source">
            <summary> 说明 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.BaseEntitySource.Color">
            <summary> 曲线颜色 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.BaseEntitySource.Marker">
            <summary> 说明 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.BaseEntitySource.Text">
            <summary> 文本 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.BaseEntitySource.Elements">
            <summary> 包含的所有元素 </summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.BaseEntitySource.Visibility">
            <summary> 是否可见 </summary>
        </member>
        <member name="T:HeBianGu.WPF.EChart.CirclePointMarker">
            <summary>圆环Marker</summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.CirclePointMarker.DefiningGeometry">
            <summary> 描绘形状 </summary>
        </member>
        <member name="T:HeBianGu.WPF.EChart.ShapePointMarker">
            <summary>Abstract class that extends PointMarker and contains
            marker property as Pen, Brush and Size</summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.ShapePointMarker.Size">
            <summary>Size of marker in points</summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.ShapePointMarker.Pen">
            <summary>Pen to outline marker</summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.ShapePointMarker.DefiningGeometry">
            <summary> 描绘形状 </summary>
        </member>
        <member name="M:HeBianGu.WPF.EChart.ShapePointMarker.OnRender(System.Windows.Media.DrawingContext)">
            <summary> 绘制形状 </summary>
        </member>
        <member name="M:HeBianGu.WPF.EChart.ShapePointMarker.CloneTo(HeBianGu.WPF.EChart.ShapePointMarker)">
            <summary> 复制 </summary>
        </member>
        <member name="M:HeBianGu.WPF.EChart.ShapePointMarker.Clone">
            <summary> 复制 </summary>
        </member>
        <member name="M:HeBianGu.WPF.EChart.DataRect.#ctor(System.Windows.Rect)">
            <summary>
            Initializes a new instance of the <see cref="T:HeBianGu.WPF.EChart.DataRect"/> struct.
            </summary>
            <param name="rect">Source rect.</param>
        </member>
        <member name="M:HeBianGu.WPF.EChart.DataRect.#ctor(System.Windows.Size)">
            <summary>
            Initializes a new instance of the <see cref="T:HeBianGu.WPF.EChart.DataRect"/> struct.
            </summary>
            <param name="size">The size.</param>
        </member>
        <member name="M:HeBianGu.WPF.EChart.DataRect.#ctor(System.Windows.Point,System.Windows.Size)">
            <summary>
            Initializes a new instance of the <see cref="T:HeBianGu.WPF.EChart.DataRect"/> struct.
            </summary>
            <param name="location">The location.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:HeBianGu.WPF.EChart.DataRect.#ctor(System.Windows.Point,System.Windows.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:HeBianGu.WPF.EChart.DataRect"/> struct.
            </summary>
            <param name="point1">The point1.</param>
            <param name="point2">The point2.</param>
        </member>
        <member name="M:HeBianGu.WPF.EChart.DataRect.#ctor(System.Windows.Point,System.Windows.Vector)">
            <summary>
            Initializes a new instance of the <see cref="T:HeBianGu.WPF.EChart.DataRect"/> struct.
            </summary>
            <param name="point">The point.</param>
            <param name="vector">The vector.</param>
        </member>
        <member name="M:HeBianGu.WPF.EChart.DataRect.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:HeBianGu.WPF.EChart.DataRect"/> struct.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="P:HeBianGu.WPF.EChart.DataRect.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:HeBianGu.WPF.EChart.DataRect.YMin">
            <summary>
            Gets the bottom.
            </summary>
            <value>The bottom.</value>
        </member>
        <member name="P:HeBianGu.WPF.EChart.DataRect.YMax">
            <summary>
            Gets the top.
            </summary>
            <value>The top.</value>
        </member>
        <member name="P:HeBianGu.WPF.EChart.DataRect.XMin">
            <summary>
            Gets the left.
            </summary>
            <value>The left.</value>
        </member>
        <member name="P:HeBianGu.WPF.EChart.DataRect.XMax">
            <summary>
            Gets the right.
            </summary>
            <value>The right.</value>
        </member>
        <member name="P:HeBianGu.WPF.EChart.DataRect.Location">
            <summary>
            Gets or sets the location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:HeBianGu.WPF.EChart.DataRect.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="T:HeBianGu.WPF.EChart.T5PointMarker">
            <summary>五角星Marker</summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.T5PointMarker.DefiningGeometry">
            <summary> 描绘形状 </summary>
        </member>
        <member name="T:HeBianGu.WPF.EChart.TrianglePointMarker">
            <summary>下三角Marker</summary>
        </member>
        <member name="P:HeBianGu.WPF.EChart.TrianglePointMarker.DefiningGeometry">
            <summary> 描绘形状 </summary>
        </member>
        <member name="M:HeBianGu.WPF.EChart.TrianglePointMarker.OnRender(System.Windows.Media.DrawingContext)">
            <summary> 绘制形状 </summary>
        </member>
        <member name="T:HeBianGu.WPF.EChart.PlotterBase">
            <summary> 绘图机基类 </summary>
        </member>
        <member name="T:HeBianGu.WPF.EChart.ViewPlotter">
            <summary> 绘图结构关系 </summary>
        </member>
        <member name="T:HeBianGu.General.WpfChart.CursorGraphLine">
            <summary> 浮动标尺控件 </summary>
            <summary>
            CursorGraphLine
            </summary>
        </member>
        <member name="M:HeBianGu.General.WpfChart.CursorGraphLine.RefreshRepresentation(System.Windows.Point)">
            <summary> 绘制标尺线 </summary>
        </member>
        <member name="M:HeBianGu.General.WpfChart.CursorGraphLine.RefreshCurveSource(System.Windows.Point)">
            <summary> 绘制和曲线的焦点标记 </summary>
        </member>
        <member name="P:HeBianGu.General.WpfChart.CursorGraphLine.IsOnlyHasValue">
            <summary> 设置成true则只显示有效值部分的浮动标尺 </summary>
        </member>
        <member name="P:HeBianGu.General.WpfChart.CursorGraphLine.AutoHide">
            <summary> 设置标尺离开绘图区域是否自动隐藏 </summary>
        </member>
        <member name="P:HeBianGu.General.WpfChart.CursorGraphLine.ShowVerticalLine">
            <summary> 是否显示竖直方向标尺 </summary>
        </member>
        <member name="P:HeBianGu.General.WpfChart.CursorGraphLine.ShowHorizontalLine">
            <summary> 是否显示水平方向标尺 </summary>
        </member>
        <member name="M:HeBianGu.General.WpfChart.CursorGraphLine.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:HeBianGu.General.WpfChart.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:HeBianGu.General.WpfChart.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:HeBianGu.General.WpfChart.Properties.Resources.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
